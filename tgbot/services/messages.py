import os
from typing import Union

from aiogram.types import Message, CallbackQuery, ChatActions, MediaGroup, InputFile

from dj_ac.settings import BASE_DIR
from tgbot.keyboards.inline import product_detail
from tgbot.models.commands import get_all_admins, get_product_detail


async def send_messages_new_call_request(message: Message, fullname: str,
                                         phone_number: str, call_request_id: int) -> None:
    """ –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± —É—Å–ø–µ—à–Ω–æ–π –∑–∞—è–≤–∫–µ –Ω–∞ –∑–≤–æ–Ω–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –∏ –∞–¥–º–∏–Ω–∞–º –±–æ—Ç–∞. """

    await message.answer(f'üëç {fullname}, –∑–∞—è–≤–∫–∞ ‚Ññ{call_request_id} —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞.\n'
                         f'–û–∂–∏–¥–∞–π—Ç–µ –∑–≤–æ–Ω–∫–∞ –Ω–∞ –Ω–æ–º–µ—Ä {phone_number}.',
                         parse_mode='html')

    admins = await get_all_admins()
    for admin_dict in admins:
        await message.bot.send_message(chat_id=admin_dict.get('tg_id'),
                                       text=f'<b>üî• –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!</b>\n'
                                            f'–ù–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –Ω–∞ –∑–≤–æ–Ω–æ–∫ ‚Ññ{call_request_id}:\n\n'
                                            f'<code>{fullname}\n'
                                            f'{phone_number}</code>\n\n'
                                            f'<i>–ó–∞—è–≤–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞ –≤ –±–∞–∑–µ. '
                                            f'–†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –∑–∞–π—Ç–∏ –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å –∏ –æ—Ç–º–µ—Ç–∏—Ç—å –µ—ë —Å—Ç–∞—Ç—É—Å, '
                                            f'—á—Ç–æ–±—ã –æ–Ω–∞ –Ω–µ –∑–∞—Ç–µ—Ä—è–ª–∞—Å—å.</i>',
                                       parse_mode='html'
                                       )
        await message.bot.send_contact(chat_id=admin_dict.get('tg_id'),
                                       first_name=fullname,
                                       phone_number=phone_number)


async def send_messages_new_mess(message: Message, user_fullname: str) -> None:
    """ –û—Ç–ø—Ä–∞–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ """

    await message.answer(f'{user_fullname}, –Ω–∞–ø–∏—à–∏—Ç–µ –≤–∞—à–µ –æ–±—Ä–∞—â–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É:')
    admins = await get_all_admins()
    for admin_dict in admins:
        await message.answer(f"{admin_dict.get('name')}\n@{admin_dict.get('username')}")


async def print_product_detail(message: Union[Message, CallbackQuery], prod_id: int, parent_id: int) -> None:
    """
    –ü–µ—á–∞—Ç–∞–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –¥–µ—Ç–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ç–æ–≤–∞—Ä–µ –∏ –∫–Ω–æ–ø–∫–∞–º–∏ —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –∑–∞–∫–∞–∑–∞—Ç—å.
    """

    product = await get_product_detail(prod_id)
    text = (f"<b>{product.title}</b>\n\n"
            f"üì¶ –ù–∞–ª–∏—á–∏–µ: <code>{product.avaliable_status}</code>\n"
            f"üí∞ –¶–µ–Ω–∞: <code>{product.total_price} —Ä—É–±.</code>\n\n"
            f"<i>{product.description}</i>")

    if product.images.all():
        await message.edit_text('–ó–∞–≥—Ä—É–∂–∞—é —Ñ–æ—Ç–æ...')
        await ChatActions.upload_photo()

        if len(product.images.all()) == 1:
            url = os.path.join(BASE_DIR, 'media', str(product.images.first().image))
            await message.bot.send_photo(chat_id=message.chat.id,
                                         photo=InputFile(url),
                                         caption=text,
                                         parse_mode='html',
                                         reply_markup=await product_detail(prod_id, parent_id))
        else:
            media = MediaGroup()
            for img in product.images.all():
                media.attach_photo(InputFile(os.path.join(BASE_DIR, 'media', str(img.image))))
            await message.bot.send_media_group(chat_id=message.chat.id, media=media)
            await message.answer(text, parse_mode='html', reply_markup=await product_detail(prod_id, parent_id))
    else:
        await message.answer(text, parse_mode='html', reply_markup=await product_detail(prod_id, parent_id))
