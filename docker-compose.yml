version: '3.9'

services:
  bot:
    container_name: ${PROJECT_NAME}-bot
    build:
      dockerfile: Dockerfile.bot
      context: .
    working_dir: "/usr/src/app/${BOT_NAME:-tg_bot}"
    volumes:
      - .:/usr/src/app/${BOT_NAME:-tg_bot}
    command: python bot.py
    restart: always
    depends_on:
      - db
      - redis
      - web
    env_file: .env
    logging:
      driver: loki
      options:
        max-file: "5"
        max-size: "5m"
        loki-url: http://localhost:3100/loki/api/v1/push

  web:
    container_name: ${PROJECT_NAME}-web
    build:
      dockerfile: Dockerfile.web
      context: .
    working_dir: "/usr/src/app/${PROJECT_NAME:-web}"
    volumes:
      - .:/usr/src/app/${PROJECT_NAME:-web}
    command: python manage.py runserver 0.0.0.0:8000
    ports:
      - 8000:8000
    restart: always
    depends_on:
      - db
      - redis
    env_file: .env
    logging:
      driver: loki
      options:
        max-file: "5"
        max-size: "5m"
        loki-url: http://localhost:3100/loki/api/v1/push

  db:
    image: postgres:15.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: always
    container_name: ${PROJECT_NAME}-db
    env_file: .env
    ports:
      - 5433:5432

  redis:
    container_name: ${PROJECT_NAME}-redis
    image: redis:7.2-rc3-alpine
    restart: always
    env_file:
      - .env
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    expose:
      - ${REDIS_PORT}
    volumes:
      - ./redis.conf:/usr/local/etc/redis/redis.conf

  celery:
    build:
      dockerfile: Dockerfile.web
      context: .
    command: celery -A dj_ac worker -l info
    volumes:
      - .:/usr/src/app/${PROJECT_NAME:-web}
    depends_on:
      - redis
    env_file:
      - ./.env

  celery-beat:
    build:
      dockerfile: Dockerfile.web
      context: .
    command: celery -A dj_ac beat -l info
    volumes:
      - .:/usr/src/app/${PROJECT_NAME:-web}
    env_file:
      - ./.env
    depends_on:
      - redis

  grafana:
    image: grafana/grafana:9.2.15
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
    ports:
      - "3000:3000"

  loki:
    image: grafana/loki:2.8.0
    ports:
      - "3100:3100"

volumes:
  postgres_data:
  redis_data:
